#!/bin/bash
#    ██
#   ░██
#  ██████ ██████████  ██   ██ ██   ██
# ░░░██░ ░░██░░██░░██░██  ░██░░██ ██
#   ░██   ░██ ░██ ░██░██  ░██ ░░███
#   ░██   ░██ ░██ ░██░██  ░██  ██░██
#   ░░██  ███ ░██ ░██░░██████ ██ ░░██
#    ░░  ░░░  ░░  ░░  ░░░░░░ ░░   ░░
#
#  ▓▓▓▓▓▓▓▓▓▓
# ░▓ author ▓ xero <x@xero.style>
# ░▓ code   ▓ https://code.x-e.ro/dotfiles
# ░▓ mirror ▓ https://git.io/.files
# ░▓▓▓▓▓▓▓▓▓▓
# ░░░░░░░░░░
#
#----------------------------------------------------------// vars
FULL=━
EMPTY=╍
[[ -z "$UI_THEME" ]] && UI_THEME="EVANGELION"
# ┄─┉╍━
CC=#dddddd
if [[ "$UI_THEME" == "EVANGELION" ]]; then
	C0=#201430
	C1=#3b3847
	C2=#a4d2ec
	C3=#8B2B41
	C4=#875FAF
	C5=#ccd2d9
	C6=#bc5517
	C7=#ab92fc
	C8=#d88d3e
	C9=#9CDA7C
else
	C0=#000000
	C1=#222222
	C2=#8FBCBB
	C3=#B3291C
	C4=#685742
	C5=#d7c483
	C6=#C9A554
	C7=#78824b
	C8=#C9A554
	C9=#9CDA7C
fi
W="$(tmux display-message -p "#{window_width}")"
#--------------------------------------------------// progress bar
draw() {
	perc=$1
	size=$2
	inc=$((perc * size / 125))
	out=
	for v in $(seq 0 $((size - 1))); do
		[[ "$v" -le "$inc" ]] &&
			out="${out}#[fg=$3]${FULL}" ||
			out="${out}#[fg=$C5]${EMPTY}"
	done
	[[ $W -gt 80 ]] && printf "%s" "$out"
}
pressure() {
	perc=$1
	if [[ "$perc" -gt 90 ]]; then
		echo "$C3"
	elif [[ "$perc" -gt 74 ]]; then
		echo "$C6"
	else
		echo "$C1"
	fi
}
#-------------------------------------------------------// compute
FRONT="#[bg=$C7]#[fg=0]▓▒░"
if [[ "$(uname)" = "Darwin" ]]; then
	CPU=$(top -l 1 -n 0 | awk '/CPU usage/ {printf "%.0f\n", $3 + $5}')
	RAM=$(echo "100 - $(memory_pressure | tail -1 | sed 's/.*: //;s/\%//')" | bc)
	D1=$(df -h | sed -n '2p' | sed 's/.*  //;s/\%.*//')
else
	CPU=$(printf "%.0f" "$(grep 'cpu ' /proc/stat |
		awk '{u=($2+$4)*100/($2+$4+$5)} END {print u}')")
	RAM=$(free | awk '/Mem:/ {print int($3/$2 * 100.0)}')
	D1=$(df -h | grep '/$' | tr -s ' ' | cut -d ' ' -f5 | sed 's/%//')
	D2=$(df -h | grep 'x0' | tr -s ' ' | cut -d ' ' -f5 | sed 's/%//')
fi
SYS=$({
	PC=$(pressure "$CPU")
	PR=$(pressure "$RAM")
	PD=$(pressure "$D1")
	[[ -n "$D2" ]] &&
		PD2=$(pressure "$D2")
	PAD=" "
	printf "#[fg=%s] %s %s%s " "$PC" "${PAD:${#CPU}}" "$CPU% " "$(draw "$CPU" 4 "$PC")"
	printf "#[fg=%s] %s %s " "$PR" "$RAM%" "$(draw "$RAM" 4 "$PR")"
	printf "#[fg=%s]󰽄 %s %s " "$PD" "$D1%" "$(draw "$D1" 4 "$PD")"
	[[ -n "$D2" ]] &&
		printf "#[fg=%s]󰖟 %s %s" "$PD2" "$D2%" "$(draw "$D2" 4 "$PD2")"
})
VPN=$({
	pgrep 'vpn/|openvpn/|openconnect' > /dev/null 2>&1 &&
		printf "#[fg=%s]░▒#[bg=%s]#[fg=%s]  #[bg=%s]#[fg=%s]▒░" "$C8" "$C8" "$C0" "$C4" "$C8" ||
		printf " #[fg=%s]░▒" "$C4"
})
BAT=$({
	bp=$(pmset -g batt | grep -Eo "\d+%" | sed 's/\%//')
	if [[ -n "$bp" ]]; then
		if [[ "$bp" -eq 100 ]]; then
			st="󰂄"
			C=$C9
		elif [[ "$bp" -gt 90 ]]; then
			st="󱊣"
			C=$C9
		elif [[ "$bp" -gt 74 ]]; then
			st="󱊢"
			C=$C2
		elif [[ "$bp" -gt 50 ]]; then
			st="󱊢"
			C=$C2
		elif [[ "$bp" -gt 20 ]]; then
			st="󱊡"
			C=$C8
		else
			st="󰂎"
			C=$C3
		fi
		printf "#[bg=%s]#[fg=%s]░▒▓#[bg=%s]#[fg=%s]#[fg=%s]%s %s%s#[bg=%s]" \
			"$C7" "$C" "$C" "$C7" "$C0" "$st" "$bp" "%" "$C"
	fi
})
TIME=$({
	[[ "$W" -gt 80 ]] && C=$C8 || C=$C7
	printf "#[fg=%s]#[bg=%s] %s" \
		"$C5" "$C4" "$(date +'%H:%M')"
	[[ "$W" -gt 80 ]] &&
		printf " #[fg=%s]%s#[fg=%s]%s" \
			"$C5" "$(date +'%Y-%m-')" \
			"$CC" "$(date +'%d')" ||
		printf " #[fg=%s]%s#[fg=%s]%s" \
			"$C5" "$(date +'%m/')" \
			"$CC" "$(date +'%d')"
	printf " #[bg=%s]#[fg=%s]▒░" "$C0" "$C4"
})
#--------------------------------------------------------// render
[[ "$W" -gt 80 ]] &&
	printf "%s %s%s%s%s" "$FRONT" "$SYS" "$BAT" "$VPN" "$TIME" ||
	printf "%s %s%s" "$FRONT" "$SYS" "$TIME"
